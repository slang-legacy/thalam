head
	meta(charset='utf8')
	meta(http-equiv='X-UA-Compatible', content='IE=edge, chrome=1')
	meta(name='description', content='description of your site')
	meta(name='author', content= "author of the site")

	title= repo_name
	link(rel="stylesheet", href="/css/styles.css")
	link(rel="stylesheet", href="/css/pygment_trac.css")

	style(type="text/css", media="screen").
		#editor { 
			height: 200px;
			width: 100%;
			position: relative;
		}

	script(src="http://d1n0x3qji82z53.cloudfront.net/src-min-noconflict/ace.js", type="text/javascript", charset="utf-8")
	//switch to google cdn when published
	script(src="/components/coffee-script/extras/coffee-script.js")
	script(src="/lib/jquery-1.7.2.js")
	script(src="/lib/underscore-1.4.2.js")
	script(src="/lib/backbone-0.9.1.js")
	script(src="/js/main.js")
body
	header
		h1 #{repo_name}
		p An extendable Javascript notification system built with Backbone.js & CoffeeScript
	#banner
		span#logo
		a.button.fork(href="#{repo_url}")
			strong Fork On GitHub
		.downloads
			span Downloads:
			ul
				li
					a.button(href='#{repo_url}/zipball/master') ZIP
				li
					a.button(href='#{repo_url}/tarball/master') TAR

	.wrapper
		nav
			ul
		section
			:markdown
				#Intro
				Thalam is a rewrite of the jGrowl notification system, that makes notifications even easier easier to manage. Leapfrogging off of the structure and meathods provided by Backbone.js and Underscore, Thalam lets you control notifications with a standard Backbone collection.

				This means you can:

				- search through open notifications
				- modify notifications, even after they have been sent
				- close notifications with logic to tell when they become irrelevent (not just timeouts)
				- apply classes to notifications at any time, for styling
				- bind functions to the events the notification has

				...all through a standard, well maintained framework: Backbone.js. 

				#Examples

				```
				window.NotificationsView = new NotificationsView(model: new Notifications())
				```

			#editor
				|blah = () ->
				|	alert('Thalam')
				|blah()


			:coffeescript
				editor = ace.edit("editor")
				editor.setTheme("ace/theme/monokai")
				editor.getSession().setMode("ace/mode/coffee")
				window.NotificationsView = new NotificationsView(model: new Notifications())

				window.run_example = ->
					code = CoffeeScript.compile(editor.getValue())
					eval code

			button(onclick="run_example()") Run Example Code

			:markdown
				caption
				#Docs
				This page provides info on the options, functions, and events that Thalam supports by default. If you would like to learn how to extend Thalam and add new functionality, (like notifications designed specificly for your project) you should look at the [Backbone.js Docs](http://documentcloud.github.com/backbone/)
						
		footer
			p
				span.small
					| Hosted on GitHub Pages â€” Theme inspired by 
					a(href='http://twitter.com/#!/michigangraham') mattgraham

	// if lt IE 9
		script(src="//html5shiv.googlecode.com/svn/trunk/html5.js")
